name: 'Build .NET desktop app'

on:
    workflow_call:
        inputs:
            sln-file:
                description: 'The location and file name of the solution'
                required: true
                type: string
            build-config:
                description: 'The build configuration to use (default: Release)'
                required: false
                type: string
                default: 'Release'
            artifact-name:
                description: 'The name of the artifact'
                required: false
                type: string
                default: 'DesktopBuildOutput'
            artifact-files:
                description: 'The files to put into the artifact'
                type: string
                required: true
            nuget-source:
                description: 'Add additional nuget source'
                type: string
                required: false
            use-cache:
                description: 'Indication whether the cache should be used instead of artifacts'
                required: false
                type: boolean
                default: false
            cache-path:
                description: 'Indication whether the cache should be used instead of artifacts'
                required: false
                type: string
                default: ${{ github.workspace }}

        secrets:
            action-user:
                required: true
            action-token:
                required: true
            awdev-nuget-source:
                required: true

        outputs:
            download:
                description: Return the name of the artifact download
                value: ${{ jobs.build.outputs.download }}

            cache-path:
                description: Return the paths of the cache
                value: ${{ jobs.build.outputs.cache-path }}

jobs:
    build:
        name: 'Build Desktop App'
        runs-on: windows-setups

        outputs:
            download: ${{ inputs.artifact-name }}
            cache-path: ${{ inputs.artifact-files }}

        steps:
            - uses: actions/checkout@v1
              name: Checkout Code

            - uses: nuget/setup-nuget@v1
              name: Setup NuGet
              with:
                  nuget-api-key: ${{ secrets.action-token }}
                  nuget-version: '5.x'

            - name: Additional NuGet Source
              if: ${{ inputs.nuget-source != '' }}
              run: |
                  dotnet nuget add source --name rebex ${{ inputs.nuget-source }}

            - name: Ensure GitHub NuGet Source
              run: |
                  dotnet nuget add source -u ${{ secrets.action-user }} -p ${{ secrets.action-token }} --store-password-in-clear-text --name github ${{ secrets.awdev-nuget-source }}

            - name: Restore NuGet Packages
              run: nuget restore ${{ inputs.sln-file }}

            - name: Build desktop extension
              run: '& "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Current\bin\MSBuild.exe" "${{ inputs.sln-file }}" /p:Configuration=${{ inputs.build-config }}'

            - name: Upload Artifact
              if: inputs.use-cache == false
              uses: actions/upload-artifact@v2
              with:
                  name: ${{ inputs.artifact-name }}
                  path: ${{ inputs.artifact-files }}

            - name: 'Upload the Publish Artifact'
              if: inputs.use-cache == true
              uses: actions/cache/save@v3
              with:
                  key: ${{ inputs.artifact-name }}
                  path: ${{ inputs.artifact-files }}
                  enableCrossOsArchive: true
